name: Build and Push Docker Image stage 

on:
  push:
    tags:
      - "stage-v*"

jobs:
  build:
    environment: stage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Convert repository owner and name to lowercase
        id: vars
        run: |
          echo "REPO_OWNER=$(echo '${{ github.repository_owner }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo '${{ github.event.repository.name }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
         docker build --build-arg GITHUB_TOKEN=${{ secrets.TOKEN }} -t ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:${{ github.ref_name }} .

      - name: Push Docker image to GHCR
        run: |
          docker push ghcr.io/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}:${{ github.ref_name }}
            
      - name: Logout from GitHub Container Registry
        run: docker logout ghcr.io
        
      - name: Checkout haust-infra repository
        uses: actions/checkout@v2
        with:
          repository: Haust-Labs/haust-infra
          token: ${{ secrets.TOKEN }}
          path: haust-infra
          ref: master
            
      - name: Update image tag in stage-values.yaml
        run: |
          ls
          echo "--------------infra--------------------"
          cd haust-infra
          ls

          NEW_TAG="${{ github.ref_name }}"
          if [[ -z "$NEW_TAG" ]]; then
            echo "Ошибка: тег пустой!"
            exit 1
          fi

          echo "--------------echotag--------------------"
          echo $NEW_TAG

          if ! command -v yq &> /dev/null; then
            echo "Installing yq..."
            sudo apt-get update && sudo apt-get install -y jq
            sudo wget https://github.com/mikefarah/yq/releases/download/v4.17.1/yq_linux_amd64 -O /usr/local/bin/yq
            sudo chmod +x /usr/local/bin/yq
          fi

          # Обновляем тег в файле values-dev.yaml
          yq eval ".image.tag = \"$NEW_TAG\"" -i k8s/apps/scw/dex/dex-frontend/values-stage.yaml

          # Показываем результат
          echo "--------------tag--------------------"
          cat k8s/apps/scw/dex/dex-frontend/values-stage.yaml

      - name: Commit and push changes
        run: |
          cd haust-infra
          ls
          pwd
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add k8s/apps/scw/dex/dex-frontend/values-stage.yaml
          git commit -m "Update Dex FE version to ${{ github.ref_name }}"
          git push
